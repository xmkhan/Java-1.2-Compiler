Type PrimitiveType
Type ReferenceType

PrimitiveType boolean
PrimitiveType int
PrimitiveType char
PrimitiveType byte
PrimitiveType short

ClassType ClassOrInterfaceType
InterfaceType ClassOrInterfaceType

ReferenceType ClassOrInterfaceType
ReferenceType ArrayType

ClassOrInterfaceType Name

ArrayType PrimitiveType [ ]
ArrayType Name [ ]

Name SimpleName
Name QualifiedName
SimpleName Identifier
QualifiedName Name . Identifier

Literal IntLiteral
Literal CharLiteral
Literal StringLiteral
Literal BooleanLiteral
Literal null

BooleanLiteral true
BooleanLiteral false

Program CompilationUnit EOF

CompilationUnit TypeDeclaration
CompilationUnit PackageDeclaration TypeDeclaration
CompilationUnit ImportDeclarations TypeDeclaration
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclaration

ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration

PackageDeclaration package Name ;

ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration

SingleTypeImportDeclaration import Name ;
TypeImportOnDemandDeclaration import Name . * ;

TypeDeclaration ClassDeclaration
TypeDeclaration ClassDeclaration ;
TypeDeclaration InterfaceDeclaration
TypeDeclaration InterfaceDeclaration ;

Modifiers Modifier
Modifiers Modifiers Modifier

Modifier public
Modifier protected
Modifier static
Modifier abstract
Modifier final
Modifier native

ClassDeclaration class Identifier ClassBody
ClassDeclaration Modifiers class Identifier ClassBody
ClassDeclaration class Identifier Super ClassBody
ClassDeclaration class Identifier Interfaces ClassBody
ClassDeclaration Modifiers class Identifier Super ClassBody
ClassDeclaration Modifiers class Identifier Interfaces ClassBody
ClassDeclaration class Identifier Super Interfaces ClassBody
ClassDeclaration Modifiers class Identifier Super Interfaces ClassBody

Super extends ClassType
Interfaces implements InterfaceTypeList

InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType

ClassBody { ClassBodyDeclarations }
ClassBody { }

ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration

ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration ConstructorDeclaration

ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration

FieldDeclaration Modifiers Type VariableDeclarator ;
FieldDeclaration Type VariableDeclarator ;

VariableDeclarator Identifier
VariableDeclarator Identifier = Expression

MethodDeclaration MethodHeader MethodBody

MethodHeader Type MethodDeclarator
MethodHeader Modifiers Type MethodDeclarator
MethodHeader void MethodDeclarator
MethodHeader Modifiers void MethodDeclarator

MethodDeclarator Identifier ( FormalParameterList )
MethodDeclarator Identifier ( )

FormalParameterList FormalParameter
FormalParameterList FormalParameterList , FormalParameter

FormalParameter Type Identifier

MethodBody Block
MethodBody ;

ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody
ConstructorDeclaration ConstructorDeclarator ConstructorBody

ConstructorDeclarator SimpleName ( FormalParameterList )
ConstructorDeclarator SimpleName ( )

ConstructorBody { }
ConstructorBody { BlockStatements }
InterfaceDeclaration interface Identifier InterfaceBody
InterfaceDeclaration interface Identifier ExtendsInterfaces InterfaceBody
InterfaceDeclaration Modifiers interface Identifier InterfaceBody
InterfaceDeclaration Modifiers interface Identifier ExtendsInterfaces InterfaceBody

ExtendsInterfaces extends InterfaceType
ExtendsInterfaces ExtendsInterfaces , InterfaceType

InterfaceBody { InterfaceMemberDeclarations }
InterfaceBody { }

InterfaceMemberDeclarations InterfaceMemberDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations InterfaceMemberDeclaration

InterfaceMemberDeclaration AbstractMethodDeclaration
AbstractMethodDeclaration MethodHeader ;

Block { BlockStatements }
Block { }

BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement

BlockStatement LocalVariableDeclarationStatement
BlockStatement Statement

LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration Type Identifier = Expression

Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement

StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf

StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement

EmptyStatement ;
ExpressionStatement StatementExpression ;

StatementExpression Assignment
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression

IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf

WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf

ForStatement for ( ; ; ) Statement
ForStatement for ( ; ; ForUpdate ) Statement
ForStatement for ( ForInit ; ; ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; Expression ; ForUpdate ) Statement
ForStatement for ( ForInit ; ; ForUpdate ) Statement
ForStatement for ( ForInit ; Expression ; ) Statement
ForStatement for ( ForInit ; Expression ; ForUpdate ) Statement

ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf

ForInit StatementExpression
ForInit LocalVariableDeclaration

ForUpdate StatementExpression

ReturnStatement return Expression ;
ReturnStatement return ;

Primary Literal
Primary this
Primary ( Expression )
Primary ClassInstanceCreationExpression
Primary FieldAccess
Primary MethodInvocation
Primary ArrayAccess

ClassInstanceCreationExpression new ClassType ( ArgumentList )
ClassInstanceCreationExpression new ClassType ( )
ArrayCreationExpression new Name [ Expression ]
ArrayCreationExpression new PrimitiveType [ Expression ]

ArgumentList Expression
ArgumentList ArgumentList , Expression

FieldAccess Primary . Identifier
FieldAccess ArrayCreationExpression . Identifier

MethodInvocation Name ( )
MethodInvocation Name ( ArgumentList )
MethodInvocation Primary . Identifier ( )
MethodInvocation Primary . Identifier ( ArgumentList )

ArrayAccess Name [ Expression ]
ArrayAccess Primary [ Expression ]

UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotMinus

UnaryExpressionNotMinus Primary
UnaryExpressionNotMinus Name
UnaryExpressionNotMinus ! UnaryExpression
UnaryExpressionNotMinus CastExpression

CastExpression ( PrimitiveType [ ] ) UnaryExpression
CastExpression ( PrimitiveType ) UnaryExpression
CastExpression ( Expression ) UnaryExpressionNotMinus
CastExpression ( Name [ ] ) UnaryExpressionNotMinus

MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression

AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression

RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType

EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression

AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression

InclusiveOrExpression AndExpression
InclusiveOrExpression InclusiveOrExpression | AndExpression

ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression

ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression

AssignmentExpression ConditionalOrExpression
AssignmentExpression ArrayCreationExpression
AssignmentExpression Assignment

Assignment LeftHandSide AssignmentOperator AssignmentExpression

LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess

AssignmentOperator =
Expression AssignmentExpression
